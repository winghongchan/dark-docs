/* ==UserStyle==
@name           Shades and Slides
@namespace      userstyles.world/user/winghongchan
@version        2023.05.23
@description    A Material 3 themed dark mode for Google Slides
@author         Walter winghongchan
@homepageURL    https://github.com/winghongchan/dark-docs
@supportURL     https://github.com/winghongchan/dark-docs/issues
@license        GPL-3.0-or-later
@preprocessor   less
==/UserStyle== */

@-moz-document url-prefix("https://docs.google.com/presentation/d/") {
  // Variables
  
  :root {
    
    // Colour
    --ddocs-primary: #a8c7fa;
    --ddocs-primary-icon: invert(100%) hue-rotate(180deg) brightness(75%) saturate(400%);
    --ddocs-primary-hover: rgba(168, 199, 250, var(--ddocs-hover-state-layer-opacity)); // That’s right, standard (no fill or outline) icon buttons, when enabled (selected) and hovered, use a state layer of colour primary! Not on-primary-container or something. https://m3.material.io/components/icon-buttons/specs
    --ddocs-primary-focus: rgba(168, 199, 250, var(--ddocs-focus-state-layer-opacity));
    --ddocs-primary-pressed: rgba(168, 199, 250, var(--ddocs-pressed-state-layer-opacity));
    --ddocs-on-primary: #062e6f;
    --ddocs-on-primary-hover: #9bbaef;
    --ddocs-on-primary-focus: #94b4e9;
    --ddocs-on-primary-pressed: #94b4e9;
    --ddocs-primary-container: #004a77;
    --ddocs-on-primary-container: #c2e7ff;
    --ddocs-on-primary-container-icon: invert(100%) hue-rotate(180deg) saturate(150%);
    --ddocs-on-primary-container-hover: #0f5682;
    --ddocs-on-primary-container-focus: #185d88;
    --ddocs-on-primary-container-pressed: #185d88;
    --ddocs-secondary: #7fcfff;
    --ddocs-on-secondary: #003355;
    --ddocs-secondary-container: #0842a0;
    --ddocs-secondary-container-hover: #184fa8; // Determined the colour by overlapping the -on colour at 8% opacity on top of the container. Not a problem until Dark Docs begins support for custom colours. 
    --ddocs-secondary-container-focus: #2156ac;
    --ddocs-on-secondary-container: #d3e3fd;
    --ddocs-on-secondary-container-hover: rgba(211, 227, 253, var(--ddocs-hover-state-layer-opacity));
    --ddocs-on-secondary-container-focus: rgba(211, 227, 253, var(--ddocs-focus-state-layer-opacity));
    --ddocs-on-secondary-container-pressed: rgba(211, 227, 253, var(--ddocs-pressed-state-layer-opacity));
    --ddocs-tertiary: #6dd58c;
    --ddocs-on-tertiary: #0a3818;
    --ddocs-on-tertiary-hover: #64c882;
    --ddocs-on-tertiary-focus: #61c27e;
    --ddocs-on-tertiary-pressed: #61c27e;
    --ddocs-tertiary-container: #0f5223;
    --ddocs-on-tertiary-container: #c4eed0;
    --ddocs-error: #f2b8b5;
    --ddocs-on-error: #601410;
    // missing error container
    // missing on error container
    --ddocs-background: #1f1f1f;
    --ddocs-on-background: #e3e3e3;
    --ddocs-on-background-hover: rgba(227, 227, 227, var(--ddocs-hover-state-layer-opacity)); // Just the state layer.
    --ddocs-on-background-focus: rgba(227, 227, 227, var(--ddocs-focus-state-layer-opacity));
    --ddocs-on-background-pressed: rgba(227, 227, 227, var(--ddocs-pressed-state-layer-opacity));
    --ddocs-surface: #1f1f1f;
    --ddocs-surface-container-low: #28282a; // I’m stealing these from screenshots, so I don’t know the actual surface tint. (I tried to find it.)
    --ddocs-surface-container: #2d2e31;
    --ddocs-surface-container-high: #313336;
    --ddocs-on-surface: #e3e3e3;
    --ddocs-on-surface-disabled: rgba(227, 227, 227, 12%); 
    --ddocs-on-surface-hover: rgba(227, 227, 227, var(--ddocs-hover-state-layer-opacity)); 
    --ddocs-on-surface-focus: rgba(227, 227, 227, var(--ddocs-focus-state-layer-opacity)); 
    --ddocs-on-surface-pressed: rgba(227, 227, 227, var(--ddocs-pressed-state-layer-opacity)); 
    --ddocs-surface-container-highest: #444746; 
    --ddocs-on-surface-variant: #c4c7c5; 
    --ddocs-on-surface-variant-hover: rgba(196, 199, 197, var(--ddocs-hover-state-layer-opacity));
    --ddocs-on-surface-variant-focus: rgba(196, 199, 197, var(--ddocs-focus-state-layer-opacity));
    --ddocs-on-surface-variant-pressed: rgba(196, 199, 197, var(--ddocs-pressed-state-layer-opacity));
    --ddocs-outline: #8e918f;
    --ddocs-outline-variant: #444746;
    --ddocs-inverse-surface: #e3e3e3; // inverse colours taken from the “Signed in as” bar. Might be a relic of m2
    --ddocs-inverse-on-surface: #3c4043;
    --ddocs-inverse-on-surface-hover: #d5d6d6;
    --ddocs-inverse-on-surface-focus: #cfcfd0;
    --ddocs-inverse-on-surface-pressed: #cfcfd0;
    
    // State layers (a translucent overlay is placed over things that are hovered, focused, &c.)
    --ddocs-hover-state-layer-opacity: 8%;
    --ddocs-focus-state-layer-opacity: 12%;
    --ddocs-pressed-state-layer-opacity: 12%;
    --ddocs-dragged-state-layer-opacity: 16%;
    
    // Shape
    --ddocs-corner-none: 0rem;
    --ddocs-corner-xs: 0.25rem;
    --ddocs-corner-s: 0.5rem;
    --ddocs-corner-m: 0.75rem;
    --ddocs-corner-l: 1rem;
    --ddocs-corner-xl: 1.75rem;
    
    // Shadow
    --ddocs-level2: 0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12);
    
    --paleblue-icons: hue-rotate(3.6deg) saturate(32.2%) brightness(170%); /* To desaturate blue icons to make them more legible against a dark background. If it is an inline SVG, changing its fill color to palerblue is preferable. */
    --palegreen-icons: hue-rotate(-2deg) saturate(38%) brightness(182%);
    --white-icons: brightness(290%) saturate(10%);
    --whiter-icons: brightness(325%);
    --darkfilter: invert(100%) hue-rotate(180deg) contrast(76%);
    --on: background-color 0.02s ease-in, border-color 0.06s ease, color 0.05s ease, filter 0.01s ease;
    --off: background-color 0.25s ease, border-color 0.1s ease, color 0.25s ease, filter 0.25s ease;
    
    // Dark Docs m2 variables (will be removed once side panels and the homepage get Material U’d)
    --palerblue: #8AB4F8; /* For blue text, icons, nearby items that need to be paleblue, and paleblue buttons on hover. */
    --paleblue: #669DF7; /* For blue buttons and other wider areas of paleblue. */
    --blue-ripple: #394457; /* Background color to indicate that something is active (toggled on or being clicked, for example). */
    --palergreen: #81C995; /* Mostly for suggesting mode. */
    --green-ripple: #37493F;
    --paleyellow: #FDD663; /* Mostly for comments. */
    --yellow-ripple: #454134;
    --lightestgray: #F8F9FA; /* For most text. */
    --lightergray: #DADCE0; 
    --lightgray: #BDC1C6; /* For subtext that gives more info, like a placeholder, an email below a name, or a description under an option. */
    --gray: #5F6368;
    --mediumdarkgray: #4A4E51; /* Hover state on menus. */
    --darkgray: #3C4043; /* Multiple purposes, like outlining dialog boxes to make them separate from what's behind them, or menus. */
    --darkergray: #303235; /* A hover state. */
    --darkestgray: #202124; /* For backgrounds. */
    
    /* Note to self: https://m3.material.io/foundations/interaction-states The state layer is an overlay with a fixed opacity for each state and uses the same color as the content. … components using the activated or selected states change the container and content color directly. 
    “The default for modern web browsers is 16px, so the conversion is SP_SIZE/16 = rem.” https://m3.material.io/styles/typography/type-scale-tokens So, 1rem = 16px font size. */
  }
  
  @keyframes ripple {
    0% {
      background-size: 0%;
    }
    100% {
      background-size: 480%;
    }
  }
}

.on-surface-icon() {
  &:not(.docs-icon-editors-ia-apps-script, .docs-icon-editors-ia-presentation-yellow, .docs-icon-editors-ia-spreadsheet-green) {
    filter: var(--whiter-icons);
  }
}

.on-surface-variant-icon() {
  &:not(.docs-icon-editors-ia-apps-script, .docs-icon-editors-ia-presentation-yellow, .docs-icon-editors-ia-spreadsheet-green) {
    filter: var(--white-icons);
  }
}

.animate-ripple() {
  animation: ripple 0.12s ease-in forwards;
  background-image: radial-gradient(circle, color-mix(in srgb, currentColor, transparent calc(100% + 6% - var(--ddocs-pressed-state-layer-opacity))) 50%, transparent 60%);
  background-origin: border-box;
  background-position: center;
  background-repeat: no-repeat;
}

.states(@role: "surface") {
  transition: var(--off);
  &:hover {
    transition: var(--on);
  }  
  
  & when (@role = "primary") or (@role = "primary-container") or (@role = "secondary") or (@role = "secondary-container") or (@role = "tertiary") or (@role = "tertiary-container") {
    background: var(e(%("--ddocs-%s", @role)));
    color: var(e(%("--ddocs-on-%s", @role)));
    &:hover {
      background-color: color-mix(in srgb, $background, $color var(--ddocs-hover-state-layer-opacity));
    }
    &:focus {
      background-color: color-mix(in srgb, $background, $color var(--ddocs-focus-state-layer-opacity));
      color: var(e(%("--ddocs-on-%s", @role)));
    }
    &:is(.goog-toolbar-button-active, .goog-toolbar-menu-button-open, .jfk-button-active) {
      .animate-ripple();
      background-color: color-mix(in srgb, $background, $color var(--ddocs-pressed-state-layer-opacity));
      color: var(e(%("--ddocs-on-%s", @role)));
    }
  }
  
  & when (@role = "surface") or (@role = "surface-variant") {
    background-color: transparent;
    color: var(e(%("--ddocs-on-%s", @role)));
    &:is(.goog-menuitem-disabled, .goog-toolbar-button-disabled) {
      background: none !important;
    }
    &:hover, 
    &.goog-menuitem-highlight{
      background-color: color-mix(in srgb, currentColor, transparent calc(100% - var(--ddocs-hover-state-layer-opacity)));
      color: var(e(%("--ddocs-on-%s", @role)));
    }
    &:focus {
      background-color: color-mix(in srgb, currentColor, transparent calc(100% - var(--ddocs-focus-state-layer-opacity)));
    }
    &:is(.goog-control-open, .goog-menuitem-active, .goog-toolbar-button-active, .goog-toolbar-menu-button-open, .jfk-button-active):not(.goog-submenu) {
      .animate-ripple();
      background-color: color-mix(in srgb, currentColor, transparent calc(100% - var(--ddocs-pressed-state-layer-opacity)));
      color: var(e(%("--ddocs-on-%s", @role)));
    }
  }
}

@-moz-document url-prefix("https://docs.google.com/presentation/d/") {
  // Basic components
  
  // Buttons, toolbar
  body.docs-gm.docs-grille-gm3 .docs-main-toolbars :is(.goog-toolbar-button, .goog-toolbar-menu-button) {
    background: none;
    transition: var(--off);
    .states(@role: "surface-variant");
    
    &:not(.goog-toolbar-button-checked) .docs-icon {
      filter: var(--white-icons);
    }
    &.goog-toolbar-button-checked {
      .states(@role: "primary-container");
      
      & .docs-icon {
        filter: var(--ddocs-on-primary-container-icon);
      }
    }
  }
  
  // Dividers
  .docs-gm .goog-menuseparator, 
  body.docs-gm.docs-grille-gm3 .docs-main-toolbars .goog-toolbar-separator {
    border-color: var(--ddocs-outline-variant);
  }
  
  // Menus
  .docs-grille-gm3 .goog-menu {
    background-color: var(--ddocs-surface-container);
    border: none;
    box-shadow: var(--ddocs-level2);
    color: var(--ddocs-on-surface);
    
    .goog-menuitem {
      color: currentColor;
      .states();
      
      & .goog-menuitem-content {
        color: currentColor;
      }
      &.goog-menuitem-disabled .goog-menuitem-content {
        opacity: 38%;
      }
      
      & .docs-icon-img /* Icon */ {
        .on-surface-variant-icon();
      }
      &.goog-menuitem-disabled .goog-menuitem-icon {
        filter: unset;
        .on-surface-icon();
        opacity: 38%;
      }
      
      &.apps-menuitem.goog-option-selected .goog-menuitem-checkbox /* Modern checkmark */ {
        filter: invert() brightness(85%);
      }
      
      & .goog-menuitem-accel /* Keyboard shortcut */, 
      & .punch-qanda-presenter-view-menu-item-description {
        color: var(--ddocs-on-surface-variant);
      }
      &.goog-menuitem-disabled .goog-menuitem-accel {
        color: var(--ddocs-on-surface-variant) !important;
        opacity: 38%;
      }

      & .goog-submenu-arrow /* Nested menu arrow */ {
        color: var(--ddocs-on-surface-variant);
        opacity: 1;
      }
      &.goog-submenu-open.goog-submenu:not(.goog-menuitem-disabled) .goog-submenu-arrow {
        color: var(--ddocs-on-surface);
        transform: translateX(5px);
        transition: color 0.3s, transform 0.3s;
      }
      &.goog-menuitem-disabled .goog-submenu-arrow {
        color: var(--ddocs-on-surface);
        opacity: 38%;
      }
    }
  }
  
  // Scrollbars
  :root {
    scrollbar-color: var(--ddocs-outline) transparent;
  }
  
  // Tooltips, basic
  .docs-grille-gm3 .jfk-tooltip {
    background-color: var(--ddocs-inverse-surface);
    color: var(--ddocs-inverse-on-surface);
    
    & .scb-tooltip-contents, .scb-tooltip-title /* Share button tooltip */ {
      color: currentColor;
    }
  }
}

// Buttons, common
.common-button(@type: "filled", @role: "primary") {
  border-radius: 50cqh;
  box-sizing: border-box;
  height: 2.5rem;
  &:focus {
    border-radius: 50cqh;
    height: 2.5rem;
  }
  &.goog-inline-block:has(.jfk-button-label) {
    display: inline-grid;
    padding: 0 24px;
    place-items: center;
    &>.jfk-button-label {
      margin: 0;
    }
  }
  & when (@type = "filled") {
    box-shadow: none !important;
  }
  & when (@type = "filled") and (@role = "primary") {
    .states(@role);
  }
  & when (@type = "filled tonal") and (@role = "secondary") {
    .states(%("%s-container", @role));
  }
  & when (@type = "outlined") {
    background: transparent;
    border-color: var(--ddocs-outline);
    color: var(e(%("--ddocs-%s", @role)));
    transition: var(--off);
    &:hover {
      background-color: color-mix(in srgb, currentColor, transparent calc(100% - var(--ddocs-hover-state-layer-opacity)));
      transition: var(--on);
    }
    &:is(:focus, .goog-flat-menu-button-open) {
      background-color: color-mix(in srgb, currentColor, transparent calc(100% - var(--ddocs-focus-state-layer-opacity)));
    }
  }
}

// Buttons, icon
.icon-button(@type: "standard") {
  & when (@type = "standard") {
    color: var(--ddocs-on-surface-variant);
    .states();
    & .docs-icon-img {
      .on-surface-variant-icon();
    }
  }
}

@-moz-document url-prefix("https://docs.google.com/presentation/d/") {
  // Top area
  
  // File name
  #docs-title-widget {
    div.docs-title-input-label {
      visibility: hidden !important;
    }
    input.docs-title-input {
      height: 22px;
      transition: var(--off);
      &:hover {
        border-color: var(--ddocs-outline);
        transition: var(--on);
      }
      &:focus {
        border: 1px solid var(--ddocs-primary) !important;
        box-shadow: inset 0 0 0 1px var(--ddocs-primary);
        color: var(--ddocs-on-surface);
        margin: 0;
      }
    }
  }
  
  // Star, move, status
  #docs-titlebar .docs-titlebar-badges {
    & #docs-star, #docs-folder {
      .states();
    }
  }
  
  // Revision history, comment history, slideshow, share
  #docs-titlebar-container .docs-titlebar-buttons {
    & #docs-revisions-appbarbutton, #docs-docos-commentsbutton {
      .icon-button();
    }
    & #punch-start-presentation-left {
      .common-button(@type: "outlined");
      border-color: var(--ddocs-outline) !important;
      border-radius: 50cqh 0 0 50cqh !important;
      color: var(--ddocs-on-surface);
      
      &:hover+#punch-start-presentation-right {
        background-color: color-mix(in srgb, currentColor, transparent calc(100% - var(--ddocs-hover-state-layer-opacity)));
        border-color: var(--ddocs-outline) !important;
        transition: var(--on);
      }
      &:focus+#punch-start-presentation-right {
        background-color: color-mix(in srgb, currentColor, transparent calc(100% - var(--ddocs-focus-state-layer-opacity)));
        border-color: var(--ddocs-outline) !important;
      }
    }
    & #punch-start-presentation-right {
      .common-button(@type: "outlined");
      border-color: var(--ddocs-outline) !important;
      border-radius: 0 50cqh 50cqh 0 !important;
      color: var(--ddocs-on-surface) !important;
      
      &:focus {
        background-color: color-mix(in srgb, currentColor, transparent calc(100% - var(--ddocs-focus-state-layer-opacity))) !important;
      }
      
      &>.goog-flat-menu-button-dropdown {
        border-color: var(--ddocs-on-surface-variant) transparent;
      }
    }
    & #docs-titlebar-share-client-button>.jfk-button {
      .common-button(@type: "filled tonal", @role: "secondary");
      & .apps-share-sprite {
        filter: invert() hue-rotate(180deg) brightness(95%);
      }
    }
  }
  
  // Menubar
  #docs-menubar .goog-control {
    color: var(--ddocs-on-surface);
    .states();
  }
  
  // Toolbar
  #docs-bars #docs-toolbar-wrapper.docs-main-toolbars {
    background-color: var(--ddocs-surface-container);
    
    & .goog-toolbar-combo-button {
      background: none;
      color: var(--ddocs-on-surface);
      border-color: var(--ddocs-outline) !important;
      transition: var(--off);
      &:hover {
        border-color: var(--ddocs-on-surface-variant) !important;
        transition: var(--on);
      }
      &:focus-within {
        border: 1px solid var(--ddocs-primary) !important;
        box-shadow: inset 0 0 0 1px var(--ddocs-primary);
        margin: 0 3px;
      }
      
      & .goog-toolbar-combo-button-input {
        caret-color: var(--ddocs-primary);
        color: currentColor;
        &::selection {
          background-color: var(--ddocs-primary);
          color: var(--ddocs-on-primary);
        }
      }
    }
  }
  .docs-grille-gm3 #docs-align-palette /* Text align menu */ {
    background-color: var(--ddocs-surface-container);
    
    & .goog-palette-table {
      border-collapse: unset;
      border-spacing: 2px;
    }
    
    & .goog-palette-cell {
      border-radius: var(--ddocs-corner-xs);
      transition: var(--off);
      &.goog-palette-cell-hover {
        background-color: var(--ddocs-on-surface-hover);
        transition: var(--on);
      }
      &.goog-palette-cell-selected {
        background-color: var(--ddocs-primary-container);
        &.goog-palette-cell-hover {
          background-color: var(--ddocs-on-primary-container-hover);
        }
      }
    }
    & .goog-palette-active .goog-palette-cell-hover {
      background-color: var(--ddocs-on-surface-pressed);
    }
    & .goog-palette-active .goog-palette-cell-hover.goog-palette-cell-selected {
      background-color: var(--ddocs-on-primary-container-pressed);
    }
    
    & .goog-palette-cell:not(.goog-palette-cell-selected) .docs-icon-img {
      .on-surface-variant-icon();
    }
  }
}

@-moz-document url-prefix("https://docs.google.com/presentation/d/") {
  // Main editor
  
  // Background delete
  body {
    background-color: var(--ddocs-background);
  }
  .docs-grille-gm3 #docs-chrome:not(.docs-hub-chrome), .docs-grille-gm3 #docs-header:not(.docs-hub-appbar) .docs-titlebar-buttons /* Top bar */, 
  .docs-grille-gm3 #docs-editor, .docs-grille-gm3 #docs-editor-container, .docs-grille-gm3 .filmstrip, .docs-grille-gm3 #filmstrip-controls, .docs-grille-gm3 #workspace-container, .docs-grille-gm3 #speakernotes-dragger /* Editor */ {
    background: none;
  }
  .docs-grille-gm3 .grid-view .punch-filmstrip-scroll /* Grid view */ {
    background-color: var(--ddocs-background);
  }
  .docs-grille-gm3 #docs-chrome:not(.docs-hub-chrome) {
    border-bottom-color: transparent;
  }
  
  // Filmstrip
  #filmstrip {
    & .punch-filmstrip-cursor /* Line to indicate where drag and drop slides will go */ {
      fill: var(--ddocs-primary);
    }
    
    & .punch-filmstrip-thumbnail {
      & .punch-filmstrip-thumbnail-pagenumber {
        fill: var(--ddocs-on-surface);
      }
      & .punch-filmstrip-thumbnail-border {
        stroke: var(--ddocs-outline-variant);
        transition: stroke-width 0.1s, stroke 0.15s;
        &[style*="stroke: rgb(199, 199, 199);"] {
          stroke: var(--ddocs-outline);
        }
        &[style*="stroke: rgb(11, 87, 208);"] {
          stroke: var(--ddocs-primary) !important;
        }
      }
      & .punch-filmstrip-thumbnail-border-inner {
        stroke: var(--ddocs-background);
      }
    }
    
    & #punch-total-slide-count {
      background-color: var(--ddocs-inverse-surface);
      color: var(--ddocs-on-inverse-surface);
      opacity: 1;
    }
  }
}
@-moz-document url-prefix("https://docs.google.com/presentation/d/") {
  // Side panels
  
  .docs-gm .punch-theme-sidebar {
    background-color: var(--ddocs-surface-container);
    
    &>.punch-theme-sidebar-header {
      background-color: var(--ddocs-surface-container);
      border-bottom-color: var(--ddocs-outline-variant);
      color: var(--ddocs-on-surface);
      
      & g[fill="#F9AB00"] {
        fill: var(--ddocs-primary);
      }
      
      & .docs-sidebar-gm-titlebar-icon-button {
        .icon-button();
      }
    }
    
    & .punch-theme-sidebar-in-presentation-header {
      background-color: transparent;
      color: var(--ddocs-on-surface);
      border-bottom-color: var(--ddocs-outline-variant);
      transition: var(--off);
      &:hover {
        background-color: color-mix(in srgb, var(--ddocs-on-surface), transparent calc(100% - var(--ddocs-hover-state-layer-opacity)));
        transition: var(--on);
      }
      &:focus {
        background-color: color-mix(in srgb, var(--ddocs-on-surface), transparent calc(100% - var(--ddocs-focus-state-layer-opacity)));
        transition: background-color 0.5s;
      }
      &.goog-zippy-expanded {
        background-color: var(--ddocs-surface-container-highest);
        &:hover {
          background-color: color-mix(in srgb, var(--ddocs-surface-container-highest), var(--ddocs-on-surface) var(--ddocs-hover-state-layer-opacity));
        }
        &:focus {
          background-color: color-mix(in srgb, var(--ddocs-surface-container-highest), var(--ddocs-on-surface) var(--ddocs-focus-state-layer-opacity));
          transition: background-color 0.5s;
        }
      }
      & :is(.punch-theme-sidebar-arrow-collapsed, .punch-theme-sidebar-arrow-expanded) .docs-icon-img {
        filter: var(--white-icons);
      }
      
      &+div {
        &>.punch-theme-sidebar-in-presentation-content {
          background-color: transparent;
          transition: background-color 0.5s;
        }
        &>.punch-theme-sidebar-in-presentation-content:not([style*="margin-top: -186px;"]) {
          background-color: var(--ddocs-surface-container-highest);
        }
      }
    }
    
    & .docs-thumbnailcontainer {
      text-align: center;
    }
    
    & .docs-gm-thumbnailcontrol /* Theme thumbnails */ {
      text-align: left;
      & .docs-thumbnailcontrol-thumbnailcontainer {
        border-color: var(--ddocs-outline-variant);
        transition: var(--off);
      }
      &.docs-gm-thumbnailcontrol-hover .docs-thumbnailcontrol-thumbnailcontainer {
        border-color: var(--ddocs-outline);
        transition: var(--on);
      }
      &.docs-gm-thumbnailcontrol-focused .docs-thumbnailcontrol-thumbnailcontainer {
        border-color: var(--ddocs-primary);
        transition: var(--on);
      }
      
      &>.docs-thumbnailcontrol-title {
        color: var(--ddocs-on-surface);
      }
    }
    
    & .punch-theme-sidebar-import-theme {
      border-top-color: var(--ddocs-outline-variant);
      
      & .jfk-button {
        .common-button();
      }
    }
  }
}
